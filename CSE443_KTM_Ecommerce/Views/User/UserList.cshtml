@model CSE443_KTM_Ecommerce.Controllers.UserListViewModel
@{
    Layout = "AdminLayout";
}

<div class="page-content">
    <form id="token-form">@Html.AntiForgeryToken()</form>
    <div class="container-xxl">
        <div class="row">
            <div class="col-md-8 col-xl-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center gap-2 mb-3">
                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                <iconify-icon icon="solar:users-group-two-rounded-bold-duotone" class="fs-32 text-primary avatar-title"></iconify-icon>
                            </div>
                            <div>
                                <h4 class="mb-0">All Customers</h4>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between">
                            <p class="text-muted fw-medium fs-22 mb-0">@Model.TotalItems</p>
                            <div>
                                <span class="badge text-success bg-success-subtle fs-12">
                                    <i class="bx bx-up-arrow-alt"></i>@(Model.TotalItems > 0 ? "100%" : "0%")
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 col-xl-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center gap-2 mb-3">
                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                <iconify-icon icon="solar:box-bold-duotone" class="fs-32 text-primary avatar-title"></iconify-icon>
                            </div>
                            <div>
                                <h4 class="mb-0">Orders</h4>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between">
                            <p class="text-muted fw-medium fs-22 mb-0">+@Model.OrderStatistics.TodayOrders</p>
                            <div>
                                @if (Model.OrderStatistics.OrderChange >= 0)
                                {
                                    <span class="badge text-success bg-success-subtle fs-12">
                                        <i class="bx bx-up-arrow-alt"></i>@Model.OrderStatistics.OrderChange.ToString("F1")%
                                    </span>
                                }
                                else
                                {
                                    <span class="badge text-danger bg-danger-subtle fs-12">
                                        <i class="bx bx-down-arrow-alt"></i>@Math.Abs(Model.OrderStatistics.OrderChange).ToString("F1")%
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 col-xl-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center gap-2 mb-3">
                            <div class="avatar-md bg-primary bg-opacity-10 rounded">
                                <iconify-icon icon="solar:bill-list-bold-duotone" class="fs-32 text-primary avatar-title"></iconify-icon>
                            </div>
                            <div>
                                <h4 class="mb-0">Invoice & Payment</h4>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between">
                            <p class="text-muted fw-medium fs-22 mb-0">$@Model.OrderStatistics.TotalRevenue.ToString("N2")</p>
                            <div>
                                @if (Model.OrderStatistics.RevenueChange >= 0)
                                {
                                    <span class="badge text-success bg-success-subtle fs-12">
                                        <i class="bx bx-up-arrow-alt"></i>@Model.OrderStatistics.RevenueChange.ToString("F1")%
                                    </span>
                                }
                                else
                                {
                                    <span class="badge text-danger bg-danger-subtle fs-12">
                                        <i class="bx bx-down-arrow-alt"></i>@Math.Abs(Model.OrderStatistics.RevenueChange).ToString("F1")%
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="card-title">User Management</h4>
            </div>
            <div class="card-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }

                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Address</th>
                                <th>Roles</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var counter = (Model.CurrentPage - 1) * Model.PageSize + 1;
                            }
                            @foreach (var user in Model.Users)
                            {
                                <tr>
                                    <td>@(counter++)</td>
                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td>@user.PhoneNumber</td>
                                    <td>@user.Address</td>
                                    <td>
                                        @foreach (var role in user.Roles)
                                        {
                                            <span class="badge bg-primary me-1">@role.Name</span>
                                        }
                                    </td>
                                    <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <div class="d-flex gap-2">
                                            <a href="@Url.Action("UserDetail", new { id = user.Id })" class="btn btn-sm btn-info" title="View Details">
                                                <i class="bx bx-user"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="deleteUser('@user.Id', '@user.FullName')" title="Delete User">
                                                <i class="bx bx-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (Model.TotalPages > 1)
                {
                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <div>
                            Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1) to @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)) of @Model.TotalItems entries
                        </div>
                        <nav>
                            <ul class="pagination mb-0">
                                @if (Model.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("UserList", new { page = Model.CurrentPage - 1 })">Previous</a>
                                    </li>
                                }

                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("UserList", new { page = i })">@i</a>
                                    </li>
                                }

                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("UserList", new { page = Model.CurrentPage + 1 })">Next</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            function deleteUser(id, name) {
                if (confirm(`Are you sure you want to delete user "${name}"?`)) {
                    $.ajax({
                        url: '@Url.Action("DeleteUser")',
                        type: 'POST',
                        data: { id: id },
                        headers: {
                            'RequestVerificationToken': $('#token-form input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert(response.message || 'Failed to delete user');
                            }
                        },
                        error: function(xhr) {
                            console.error('Error:', xhr);
                            alert('An error occurred while deleting the user. Please try again.');
                        }
                    });
                }
            }

            window.deleteUser = deleteUser;
        });
    </script>
}